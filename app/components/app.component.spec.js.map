{"version":3,"file":"app.component.spec.js","sourceRoot":"","sources":["../../Users/aivanychev/AngularStudy/PartyPlanner/tmp/broccoli_type_script_compiler-input_base_path-oEZfoxjS.tmp/0/src/app/components/app.component.spec.ts"],"names":[],"mappings":"AAAA,uCAAuC;;AAEvC,wBAKO,uBAAuB,CAAC,CAAA;AAC/B,8BAA6B,iBAAiB,CAAC,CAAA;AAC/C,sBAA6B,aAAa,CAAC,CAAA;AAC3C,8BAA8B,2BAA2B,CAAC,CAAA;AAC1D,mCAA4B,gCAAgC,CAAC,CAAA;AAE7D,6BAAmB,CAAC,cAAM,OAAA,CAAC,4BAAY;IACrC,oBAAY,CAAC,EAAC,MAAM,EAAE,6BAAa,EAAE,WAAW,EAAE,gCAAW,EAAC,CAAC,CAAC,EADxC,CACwC,CAAC,CAAC;AAEpE,kBAAQ,CAAC,mBAAmB,EAAE;IAC5B,YAAE,CAAC,uBAAuB,EACtB,gBAAM,CAAC,CAAC,4BAAY,CAAC,EAAE,UAAC,GAAiB;QAC3C,gBAAM,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;IAC3B,CAAC,CAAC,CAAC,CAAC;IAEJ,YAAE,CAAC,0BAA0B,EACzB,gBAAM,CAAC,CAAC,4BAAY,CAAC,EAAE,mBAAS,CAAC,UAAC,GAAiB;QACrD,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACxB,cAAI,EAAE,CAAC;QACP,gBAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC,CAAC,CAAC;IAEL,YAAE,CAAC,6BAA6B,EAC5B,gBAAM,CAAC,CAAC,4BAAY,CAAC,EAAE,mBAAS,CAAC,UAAC,GAAiB;QACrD,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACxB,cAAI,EAAE,CAAC;QACP,IAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAChC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC7B,cAAI,EAAE,CAAC;QACP,gBAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxC,GAAG,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QACrB,cAAI,EAAE,CAAC;QACP,gBAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACrD,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QACzC,cAAI,EAAE,CAAC;QACP,gBAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC,CAAC,CAAC;IAEL,4BAA4B;AAC9B,CAAC,CAAC,CAAC","sourcesContent":["/* tslint:disable:no-unused-variable */\n\nimport {\n  beforeEach, beforeEachProviders,\n  describe, xdescribe,\n  expect, it, xit,\n  async, inject, tick, fakeAsync\n} from '@angular/core/testing';\nimport { AppComponent } from './app.component';\nimport { provideStore } from '@ngrx/store';\nimport { peopleReducer } from '../reducers/peopleReducer';\nimport { partyFilter } from '../reducers/partyFilterReducer';\n\nbeforeEachProviders(() => [AppComponent,\n  provideStore({people: peopleReducer, partyFilter: partyFilter})]);\n\ndescribe('App: FactsProject', () => {\n  it('should create the app',\n      inject([AppComponent], (app: AppComponent) => {\n    expect(app).toBeTruthy();\n  }));\n\n  it('add person function test',\n      inject([AppComponent], fakeAsync((app: AppComponent) => {\n    app.addPerson('Pitmov');\n    tick();\n    expect(app.model.people[0].name).toBe('Pitmov');\n  })));\n\n  it('remove person function test',\n      inject([AppComponent], fakeAsync((app: AppComponent) => {\n    app.addPerson('Pitmov');\n    tick();\n    let id = app.model.people[0].id;\n    app.addPerson('Test person');\n    tick();\n    expect(app.model.people.length).toBe(2);\n    app.removePerson(id);\n    tick();\n    expect(app.model.people[0].name).toBe('Test person');\n    app.removePerson(app.model.people[0].id);\n    tick();\n    expect(app.model.people.length).toBe(0);\n  })));\n\n  //others function tests here\n});\n"]}